{"version":3,"sources":["providers/theme/theme.context.js","providers/theme/theme.provider.js","components/AppLayout/AppHeader/AppHeader.Style.js","components/AppLayout/AppHeader/AppHeader.js","images/RPLogoReversedSmall.png","components/AppLayout/AppSideBar/AppSideBarList.Style.js","components/AppLayout/AppSideBar/AppSideBarList.js","components/AppLayout/AppSideBar/AppSideBar.js","components/AppLayout/AppLayout.Style.js","components/AppLayout/AppLayout.js","providers/route/route.context.js","providers/route/route.provider.js","providers/route/route.guard.js","providers/route/route.linkElement.jsx","components/MuiControls/MuiTextField.jsx","components/MuiControls/MuiTabs.jsx","components/MuiControls/MuiList.jsx","components/MuiControls/MuiCheckList.jsx","components/MuiControls/MuiCard.jsx","modules/core/components/pages/ContentPageBase.jsx","modules/roulette/pages/RStgFinder.jsx","modules/mainapp/appRoutes.jsx","modules/mainapp/appBootstrap.jsx","modules/mainapp/MainApp.jsx","index.js"],"names":["ThemeContext","createContext","undefined","displayName","ThemeProvider","props","children","value","Provider","theme","AppHeaderClippedStyle","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","hide","menuButton","marginRight","backgroundColor","toolbar","alignItems","justifyContent","padding","mixins","searchInput","opacity","spacing","width","marginLeft","fontSize","breakpoints","down","toolbarButtons","flexGrow","color","useStyles","makeStyles","AppHeaderStyle","AppHeader","classes","drawerOpen","appTitle","onDrawerOpen","appHeaderContent","useTheme","isDeviceSmOrUp","useMediaQuery","up","className","CssBaseline","AppBar","position","clsx","Toolbar","style","IconButton","onClick","edge","Typography","variant","noWrap","AppSideBarListStyle","palette","background","paper","listContainer","flexDirection","listIconCol","paddingLeft","minWidth","listMenuItemIcon","listMenuSubItemIcon","paddingRight","listMenuCol","listMenuMini","fontWeight","ListItemGroup","listItemDef","miniMode","onSelectedItemChange","selectedItemID","isSubListItem","isItemExpanded","onItemExpanded","iconFontSize","hasSubItems","subListItems","length","iconClass","linkComponent","listItemIconClasses","listItemTextClasses","Tooltip","title","longLabel","arrow","placement","ListItem","button","disableGutters","component","e","event","cbFn","handleClick","bind","ID","selected","ListItemIcon","ListItemText","primary","AppSideBarList","React","useState","open","setOpen","sideBarItems","setSelectedItemID","map","sbItems","List","subheader","ListSubheader","id","listShortLabel","listLongLabel","listItems","item","i","Collapse","in","timeout","unmountOnExit","disablePadding","subItem","idx","listID","flexShrink","whiteSpace","drawerClose","overflowX","content","AppSideBarMini","onDrawerClose","isDeviceMdOrUp","DrawerComp","anchor","SwipeableDrawer","tempDrawer","onClose","onOpen","Drawer","Divider","AppLayoutStyle","height","overflow","contentPage","minHeight","AppLayout","setDrawerOpen","headerTitle","headerContent","AppSideBar","RouteProvider","PublicRoute","Component","restProps","render","createLinkElement","linkCompProps","forwardRef","itemProps","ref","MuiNumberField","type","multiline","TextField","tabPage","listSubheader","borderTopLeftRadius","shape","borderRadius","borderTopRightRadius","secondaryDefault","maxWidth","media","pageHeader","borderBottom","pageContent","flexBasis","pageFooter","footerMaxHeight","maxHeight","borderTop","ContentPageBase","footerContent","margin","RStgFinder","console","log","label","AU_APP_ROOT","AU_MENU_ITEMS","shortLabel","to","this","exact","getTestContent","Content","defaultHandler","toUpperCase","target","ModuleConfig","appSideBarItems","headerBarOptions","showSearchBox","showAlertsButton","alertsCount","showSettingsButton","showLogoutButton","onClickAlertsButton","onClickSettingsButton","onChangeSearchBox","onKeyPressSearchBox","onClickLogoutButton","appRoutes","path","destroy","status","obj","Object","keys","forEach","key","__destroy","__cleanup","localStorage","setItem","JSON","stringify","error","createMuiTheme","simpleLight","WebAppLocale","WebApp","document","AUModuleConfig","WebAppApp","useEffect","closeHandler","ev","preventDefault","window","addEventListener","removeEventListener","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.02cb428f.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst ThemeContext = createContext(undefined);\n\nThemeContext.displayName = 'ThemeContext';\n\nexport { ThemeContext };\n","import React from 'react';\r\nimport { ThemeContext } from './theme.context';\r\nimport { ThemeProvider as MUIThemeProvider } from '@material-ui/core/styles';\r\n\r\nexport function ThemeProvider(props) {\r\n  const { children, value } = props;\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      <MUIThemeProvider theme={value}>{children}</MUIThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ThemeProvider;\r\n","const drawerWidth = 240;\r\n\r\nconst AppHeaderClippedStyle = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    //border: \"5px solid yellow\",\r\n  },\r\n  appBar: {\r\n    //border: \"1px solid red\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    //border: \"1px solid green\",\r\n    //zIndex: theme.zIndex.drawer + 2,\r\n    //marginLeft: drawerWidth,\r\n    //width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  hide: {\r\n    //display: \"none\"\r\n  },\r\n\r\n  menuButton: {\r\n    //border: '1px solid black',\r\n    marginRight: '8px',\r\n    '&:hover': {\r\n      backgroundColor: 'silver',\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      //color: 'silver',\r\n    },\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n\r\n    ...theme.mixins.toolbar,\r\n  },\r\n\r\n  searchInput: {\r\n    opacity: '0.6',\r\n    padding: `0px ${theme.spacing(1)}px`,\r\n    backgroundColor: 'silver',\r\n    width: '90%',\r\n    marginLeft: '20px',\r\n    marginRight: '20px',\r\n    fontSize: '0.8rem',\r\n    '&:hover, &:active': {\r\n      backgroundColor: '#f2f2f2',\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n\r\n  toolbarButtons: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: `0 ${theme.spacing(2)}px`,\r\n    '& .MuiButtonBase-root': {\r\n      color: 'white',\r\n    },\r\n  },\r\n});\r\n\r\n//NOTE-AppHeaderStyle currently not being used but keep it for future use\r\nexport const AppHeaderStyle = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    //border: \"5px solid yellow\",\r\n  },\r\n  appBar: {\r\n    //border: \"1px solid red\",\r\n    zIndex: theme.zIndex.drawer + 100,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    //border: \"1px solid green\",\r\n    zIndex: theme.zIndex.drawer + 200,\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n\r\n    ...theme.mixins.toolbar,\r\n  },\r\n});\r\n\r\nexport default AppHeaderClippedStyle;\r\n","import React from 'react';\nimport clsx from 'clsx';\nimport {\n  makeStyles,\n  useTheme,\n  useMediaQuery,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  CssBaseline\n} from '@material-ui/core';\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport AppHeaderStyle from './AppHeader.Style';\n\nimport RPLogoReversedSmall from './../../../images/RPLogoReversedSmall.png';\n\nconst useStyles = makeStyles(AppHeaderStyle);\n\nfunction AppHeader(props) {\n  const classes = useStyles();\n  const { drawerOpen, appTitle, onDrawerOpen, appHeaderContent } = props;\n  const theme = useTheme();\n  const isDeviceSmOrUp = useMediaQuery(theme.breakpoints.up('sm'));\n\n  //const drawerOpen = this.state.open;\n  //console.log('drawerOpen', drawerOpen);\n  //console.log('AppHeader - theme: ', theme);\n  //console.log(\"AppHeader - theme text: \", JSON.stringify(theme));\n\n  const logo = {\n    img: RPLogoReversedSmall,\n    title: appTitle\n  };\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position='fixed'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: drawerOpen\n        })}\n      >\n        <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <div>\n            <IconButton\n              color='inherit'\n              aria-label='Open drawer'\n              onClick={onDrawerOpen}\n              edge='start'\n              // className={clsx(classes.menuButton, {\n              //   [classes.hide]: drawerOpen\n              // })}\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n          <div>\n            <Typography variant='h6' noWrap>\n              {appTitle}\n            </Typography>\n          </div>\n          <div>{isDeviceSmOrUp && appHeaderContent}</div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nAppHeader.propTypes = {\n  //classes: PropTypes.object.isRequired\n};\n\nexport default AppHeader;\n","export default __webpack_public_path__ + \"static/media/RPLogoReversedSmall.bcf00c34.png\";","const AppSideBarListStyle = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: 0\r\n\r\n    //TODO: the following two lines can be used to reserve 20% space for permanent menu items e.g. About or version info\r\n    //maxHeight: \"80%\",\r\n    //overflow: \"auto\"\r\n  },\r\n\r\n  listContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\"\r\n  },\r\n\r\n  listIconCol: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    minWidth: \"48px\"\r\n    //color: \"red\",\r\n  },\r\n\r\n  listMenuItemIcon: {\r\n    minWidth: \"48px\",\r\n    paddingLeft: theme.spacing(2)\r\n    //paddingLeft: theme.spacing(3),\r\n  },\r\n\r\n  listMenuSubItemIcon: {\r\n    //maxWidth: '80px',\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n\r\n  listMenuCol: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    flexGrow: 1,\r\n    paddingLeft: theme.spacing(0)\r\n    //color: \"red\",\r\n  },\r\n\r\n  listMenuMini: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"center\",\r\n    //color: \"blue\",\r\n    fontSize: \"0.6rem\",\r\n    fontWeight: \"500\",\r\n    minWidth: theme.spacing(4)\r\n  }\r\n});\r\n\r\nexport default AppSideBarListStyle;\r\n","import React from \"react\";\r\nimport { Tooltip, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport ViewQuiltSharpIcon from \"@material-ui/icons/ViewQuiltSharp\";\r\n\r\nimport AppSideBarListStyle from \"./AppSideBarList.Style\";\r\n\r\nconst useStyles = makeStyles(AppSideBarListStyle);\r\n\r\nfunction ListItemGroup(props) {\r\n  const { listItemDef } = props;\r\n  const classes = useStyles(props);\r\n  const {\r\n    miniMode,\r\n    onSelectedItemChange,\r\n    selectedItemID,\r\n    isSubListItem\r\n  } = props;\r\n  const { isItemExpanded, onItemExpanded } = props;\r\n\r\n  //console.log('isItemCollapsed: ' + isItemCollapsed);\r\n  //console.log(\"opened\", open);\r\n\r\n  //console.log('listItemDef: ', listItemDef);\r\n\r\n  const iconFontSize = miniMode ? \"small\" : \"large\";\r\n  const hasSubItems =\r\n    listItemDef.subListItems && listItemDef.subListItems.length > 0;\r\n\r\n  const iconClass = listItemDef.iconClass ? (\r\n    listItemDef.iconClass\r\n  ) : (\r\n    <ViewQuiltSharpIcon />\r\n  );\r\n\r\n  const linkComponent = listItemDef.linkComponent;\r\n  //console.log('linkComponent: ', linkComponent);\r\n\r\n  const handleClick = (event, cbFn, selectedItemID) => {\r\n    if (hasSubItems) {\r\n      onItemExpanded && onItemExpanded(!isItemExpanded);\r\n    } else {\r\n      //console.log(\"onSelectedItemChange(selectedItemID)\", selectedItemID);\r\n      onSelectedItemChange(selectedItemID);\r\n    }\r\n\r\n    if (cbFn) {\r\n      cbFn(event);\r\n    }\r\n  };\r\n\r\n  const listItemIconClasses = isSubListItem\r\n    ? miniMode\r\n      ? classes.listMenuItemIcon\r\n      : classes.listMenuSubItemIcon\r\n    : classes.listIconCol;\r\n  const listItemTextClasses = isSubListItem\r\n    ? clsx(classes.listMenuCol, classes.listMenuSubItemIcon)\r\n    : classes.listMenuCol;\r\n\r\n  return (\r\n    <Tooltip\r\n      title={miniMode ? listItemDef.longLabel : \"\"}\r\n      arrow\r\n      placement=\"right\"\r\n    >\r\n      <ListItem\r\n        key={\"L.\" + listItemDef.ID}\r\n        button\r\n        disableGutters={true}\r\n        component={linkComponent}\r\n        onClick={e =>\r\n          handleClick(\r\n            e,\r\n            listItemDef.onClick && listItemDef.onClick.bind(listItemDef),\r\n            listItemDef.ID\r\n          )\r\n        }\r\n        selected={selectedItemID === listItemDef.ID}\r\n      >\r\n        <ListItemIcon className={listItemIconClasses}>{iconClass}</ListItemIcon>\r\n        <div className={listItemTextClasses}>\r\n          {!miniMode && <ListItemText primary={listItemDef.longLabel} />}\r\n          {hasSubItems &&\r\n            (isItemExpanded ? (\r\n              <ArrowDropDownIcon fontSize={iconFontSize} />\r\n            ) : (\r\n              <ArrowRightIcon fontSize={iconFontSize} />\r\n            ))}\r\n        </div>\r\n      </ListItem>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport function AppSideBarList(props) {\r\n  const classes = useStyles(props);\r\n  const [open, setOpen] = React.useState(true);\r\n  const { miniMode, sideBarItems } = props;\r\n  const [selectedItemID, setSelectedItemID] = React.useState(\"\");\r\n\r\n  //console.log(\"AppSideBarList.miniMode: \", props.miniMode);\r\n  //console.log(\"theme\", props.theme);\r\n  //console.log(\"AppSideBarList.props\", props);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {sideBarItems.map(sbItems => {\r\n        return (\r\n          <List\r\n            key={sbItems.listID}\r\n            component=\"div\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            subheader={\r\n              <ListSubheader\r\n                component=\"div\"\r\n                id=\"nested-list-subheader\"\r\n                disableGutters={false}\r\n              >\r\n                {miniMode ? sbItems.listShortLabel : sbItems.listLongLabel}\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            {sbItems.listItems.map((item, i) => {\r\n              return (\r\n                <div key={`${item.ID}.${i}`}>\r\n                  <ListItemGroup\r\n                    listItemDef={item}\r\n                    {...props}\r\n                    onSelectedItemChange={setSelectedItemID}\r\n                    selectedItemID={selectedItemID}\r\n                    isSubListItem={false}\r\n                    isItemExpanded={open}\r\n                    onItemExpanded={setOpen}\r\n                  />\r\n                  {item.subListItems && (\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                      <List component=\"div\" disablePadding>\r\n                        {item.subListItems &&\r\n                          item.subListItems.map((subItem, idx) => {\r\n                            return (\r\n                              <ListItemGroup\r\n                                key={`${subItem.ID}.${idx}`}\r\n                                listItemDef={subItem}\r\n                                {...props}\r\n                                onSelectedItemChange={setSelectedItemID}\r\n                                selectedItemID={selectedItemID}\r\n                                isSubListItem={true}\r\n                              ></ListItemGroup>\r\n                            );\r\n                          })}\r\n                      </List>\r\n                    </Collapse>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </List>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppSideBarList;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Drawer } from '@material-ui/core';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nimport AppSideBarMiniStyle from './AppSideBar.Style';\r\nimport AppSideBarList from './AppSideBarList';\r\n\r\n//import DrawerList from '../../DrawerListEx';\r\n\r\n//const useStyles = makeStyles(AppSideBarMiniStyle);\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst AppSideBarMini = (props) => {\r\n  const classes = useStyles();\r\n  const { drawerOpen, onDrawerClose, onDrawerOpen, sideBarItems } = props;\r\n\r\n  const theme = useTheme();\r\n  //console.log(\"theme: \", theme);\r\n  const isDeviceMdOrUp = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n  //console.log(\"isDeviceMdOrUp: \", isDeviceMdOrUp);\r\n\r\n  //console.log(\"drawerOpen: \" + drawerOpen);\r\n\r\n  const DrawerComp = (props) => {\r\n    const classes = useStyles(props);\r\n    const { anchor } = props;\r\n    //console.log(classes);\r\n    return (\r\n      <SwipeableDrawer\r\n        className={clsx(classes.tempDrawer)}\r\n        anchor={anchor}\r\n        open={drawerOpen}\r\n        onClose={onDrawerClose}\r\n        onOpen={onDrawerOpen}>\r\n        {props.children}\r\n      </SwipeableDrawer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isDeviceMdOrUp ? (\r\n        <Drawer\r\n          variant='permanent'\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: drawerOpen,\r\n            [classes.drawerClose]: !drawerOpen,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: drawerOpen,\r\n              [classes.drawerClose]: !drawerOpen,\r\n            }),\r\n          }}\r\n          open={drawerOpen}>\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={onDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <AppSideBarList miniMode={!drawerOpen} title='' {...props} />\r\n          <Divider />\r\n        </Drawer>\r\n      ) : (\r\n        <DrawerComp anchor='left'>\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={onDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <AppSideBarList\r\n            miniMode={!drawerOpen}\r\n            title=''\r\n            sideBarItems={sideBarItems}\r\n          />\r\n          <Divider />\r\n        </DrawerComp>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppSideBarMini;\r\n","//const drawerWidth = 240;\r\n\r\nconst AppLayoutStyle = (theme) => ({\r\n  root: {\r\n    //border: '1px solid blue',\r\n    display: 'flex',\r\n    //margin: '5px 5px 5px 80px',\r\n    height: '100vh',\r\n    overflow: 'hidden',\r\n    //padding: `${theme.spacing(0.5)}px`\r\n  },\r\n  toolbar: {\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    //border: '1px solid red',\r\n    flexGrow: 1,\r\n  },\r\n  contentPage: {\r\n    //border: \"1px solid red\",\r\n    //height: `100%`,\r\n    overflow: 'auto',\r\n    height: `calc(100% - ${theme.mixins.toolbar.minHeight + 8}px)`,\r\n    //height: '100%',\r\n    width: '100%',\r\n    //backgroundColor: '#f8f8f8',\r\n  },\r\n});\r\n\r\nexport default AppLayoutStyle;\r\n","import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport { AppHeader } from './AppHeader';\r\nimport { AppSideBarMini } from './AppSideBar';\r\nimport AppLayoutStyle from './AppLayout.Style';\r\n\r\nconst useStyles = makeStyles(AppLayoutStyle);\r\n\r\nfunction AppLayout(props) {\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const { children, sideBarItems, headerTitle, headerContent } = props;\r\n  //console.log('children: ', children);\r\n  const handleDrawerOpen = () => {\r\n    setDrawerOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setDrawerOpen(false);\r\n  };\r\n  const handleDrawerToggle = () => {\r\n    setDrawerOpen(!drawerOpen);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppHeader\r\n        appTitle={headerTitle}\r\n        appHeaderContent={headerContent}\r\n        drawerOpen={drawerOpen}\r\n        //onDrawerOpen={handleDrawerOpen}\r\n        onDrawerOpen={handleDrawerToggle} //for clipped appbar\r\n      />\r\n      <AppSideBarMini\r\n        sideBarItems={sideBarItems}\r\n        drawerOpen={drawerOpen}\r\n        onDrawerClose={handleDrawerClose}\r\n        onDrawerOpen={handleDrawerOpen} //for clipped appbar\r\n      />\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <div className={classes.contentPage}>{children}</div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppLayout;\r\n","import { createContext } from 'react';\n\nconst RouteContext = createContext(undefined);\n\nRouteContext.displayName = 'RouteContext';\n\nexport { RouteContext };\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nexport function RouteProvider(props) {\r\n    const { children } = props;\r\n    return (\r\n        <BrowserRouter >\r\n            {children}\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default RouteProvider;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = (props) => {\r\n    const { component: Component, ...restProps } = props;\r\n    return (\r\n        <Route\r\n            {...restProps}\r\n            render={(props) => (\r\n                <Component {...restProps} />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport const ProtectedRoute = (props) => {\r\n    console.log('ProtectedRoute: ', props)\r\n    const { component: Component, auth, authData, redirectTo, ...restProps } = props;\r\n    return (\r\n        <Route {...restProps} render={(props) => (\r\n            auth && auth(authData)\r\n                ? <Component {...restProps} />\r\n                : <Redirect to={redirectTo} />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;\r\n\r\n","import React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nexport function createLinkElement(linkCompProps) {\r\n  const { ...restProps } = linkCompProps;\r\n  return React.forwardRef((itemProps, ref) => (\r\n    <RouterLink ref={ref} {...restProps} {...itemProps} />\r\n  ));\r\n}\r\n\r\n/*\r\nexport function RouterLinkMemoized(linkCompProps) {\r\n  const { to } = linkCompProps;\r\n  const routerLink = React.useMemo(\r\n    () => createRouterLinkFwdRef(linkCompProps),\r\n    [to]\r\n  );\r\n  return routerLink;\r\n}\r\n*/\r\n","import React from 'react';\r\nimport { IconButton, InputAdornment, TextField } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\nexport function MuiTextField(props) {\r\n  const { value } = props;\r\n  const { showClear = false, onClear, ...restProps } = props;\r\n  const inputProps =\r\n    showClear && value\r\n      ? {\r\n          endAdornment: (\r\n            <InputAdornment position='end'>\r\n              <IconButton\r\n                aria-label='clear text input'\r\n                edge='end'\r\n                onClick={onClear}\r\n              >\r\n                <HighlightOffIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }\r\n      : {};\r\n  return (\r\n    <TextField autoComplete='off' {...restProps} InputProps={inputProps} />\r\n  );\r\n}\r\n\r\nexport function MuiNumberField(props) {\r\n  const { type, multiline, ...restProps } = props;\r\n  return <TextField type='number' multiline={false} {...restProps} />;\r\n}\r\n\r\nexport function MuiPasswordField(props) {\r\n  const { type, multiline, ...restProps } = props;\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword((prev) => !prev);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      type={showPassword ? 'text' : 'password'}\r\n      multiline={false}\r\n      autoComplete='off'\r\n      {...restProps}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position='end'>\r\n            <IconButton\r\n              aria-label='toggle password visibility'\r\n              onClick={handleClickShowPassword}\r\n              onMouseDown={handleMouseDownPassword}\r\n              edge='end'\r\n            >\r\n              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Tabs, Tab, AppBar, makeStyles, Paper, Box } from '@material-ui/core';\r\n\r\nfunction useClientRect() {\r\n  const [rect, setRect] = React.useState(null);\r\n  const ref = React.useCallback((node) => {\r\n    if (node !== null) {\r\n      setRect(node.getBoundingClientRect());\r\n    }\r\n  }, []);\r\n  return [rect, ref];\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role='tabpanel'\r\n      hidden={value !== index}\r\n      id={`_tabpanel-${index}`}\r\n      aria-labelledby={`_tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  const pfx = `_tabpanel-${index}`;\r\n  return {\r\n    id: pfx,\r\n    'aria-controls': pfx\r\n  };\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nconst useStylesMuiTabs = makeStyles((theme) => ({\r\n  root: {\r\n    //border: '2px solid orange',\r\n    width: '100%',\r\n    //height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'auto',\r\n    //backgroundColor: 'red',\r\n    //justify: 'flex-start',\r\n    padding: theme.spacing(1)\r\n  },\r\n  tabPage: {\r\n    //border: '2px solid red',\r\n    width: '100%',\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing(1),\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nexport function MuiTabs(props) {\r\n  const classes = useStylesMuiTabs();\r\n  const {\r\n    pages,\r\n    activePageIndex,\r\n    tabPosition = 'top',\r\n    contentClassName,\r\n    appBarClassName,\r\n    handleTabChange\r\n  } = props;\r\n  const [value, setValue] = React.useState(() => {\r\n    return pages && activePageIndex < pages.length ? activePageIndex : 0;\r\n  });\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    handleTabChange && handleTabChange(newValue);\r\n  };\r\n\r\n  const tabs = (\r\n    <AppBar position='static' color='inherit' className={appBarClassName}>\r\n      <Tabs\r\n        variant='fullWidth'\r\n        indicatorColor='primary'\r\n        textColor='primary'\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label='wrapped label tabs example'\r\n      >\r\n        {pages &&\r\n          pages.map((page) => {\r\n            return (\r\n              <Tab\r\n                key={page.id}\r\n                value={page.index}\r\n                label={page.label}\r\n                variant='fullWidth'\r\n                wrapped\r\n                disabled={page.disabled}\r\n                {...a11yProps(page.index)}\r\n              />\r\n            );\r\n          })}\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n\r\n  const paperContent = (\r\n    <>\r\n      {pages &&\r\n        pages.map((page) => {\r\n          return (\r\n            <TabPanel\r\n              className={classes.tabPage}\r\n              key={page.id}\r\n              value={value}\r\n              index={page.index}\r\n            >\r\n              {page.pageContent}\r\n            </TabPanel>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n\r\n  return tabPosition === 'top' ? (\r\n    <div className={contentClassName}>\r\n      {tabs}\r\n      {paperContent}\r\n    </div>\r\n  ) : (\r\n    <div className={contentClassName}>\r\n      {paperContent}\r\n      {tabs}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStylesNavTabs = makeStyles((theme) => ({\r\n  root: {\r\n    //border: '2px solid orange',\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing(1),\r\n    overflow: 'auto'\r\n  },\r\n  tabPage: {\r\n    //border: '2px solid red',\r\n    width: '100%',\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing(1),\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nexport function MuiNavTabs(props) {\r\n  const classes = useStylesNavTabs(props);\r\n  const { pages, activePageIndex, tabPosition = 'top' } = props;\r\n  const [value, setValue] = React.useState(() => {\r\n    return pages && activePageIndex < pages.length ? activePageIndex : 0;\r\n  });\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const tabs = (\r\n    <div>\r\n      <Tabs\r\n        selectionFollowsFocus\r\n        indicatorColor=\"primary\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label='wrapped label tabs example'\r\n      >\r\n        {pages &&\r\n          pages.map((page) => {\r\n            return (\r\n              <Tab\r\n                key={page.index}\r\n                value={page.index}\r\n                label={page.label}\r\n                variant='fullWidth'\r\n                wrapped\r\n                {...a11yProps(page.index)}\r\n              />\r\n            );\r\n          })}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n\r\n  const paperContent = (\r\n    <>\r\n      {pages &&\r\n        pages.map((page) => {\r\n          return (\r\n            <TabPanel\r\n              className={classes.tabPage}\r\n              key={page.id}\r\n              value={value}\r\n              index={page.index}\r\n            >\r\n              {page.pageContent}\r\n            </TabPanel>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n\r\n  return tabPosition === 'top' ? (\r\n    <div className={classes.root}>\r\n      {tabs}\r\n      {paperContent}\r\n    </div>\r\n  ) : (\r\n    <div className={classes.root}>\r\n      {paperContent}\r\n      {tabs}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MuiTabs;\r\n","import React from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListSubheader,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  listItems: {\r\n    overflow: 'auto',\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nexport function MuiList(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    subHeader,\r\n    items,\r\n    noIcon,\r\n    selectedItemIndex,\r\n    trackSelection = true,\r\n    onItemClick,\r\n    ...restProps\r\n  } = props;\r\n  const [selectedIndex, setSelectedIndex] = React.useState(selectedItemIndex);\r\n  const { onClick } = restProps;\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    !!trackSelection && setSelectedIndex(index);\r\n    if (onItemClick) {\r\n      onItemClick(event, index);\r\n    } else if (onClick) {\r\n      onClick(event, index);\r\n    }\r\n  };\r\n\r\n  const getItemIcon = (itemIcon) => {\r\n    const icon = itemIcon ? (\r\n      itemIcon\r\n    ) : (\r\n      <ListItemIcon>\r\n        <StarIcon />\r\n      </ListItemIcon>\r\n    );\r\n    return !noIcon && icon;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List\r\n        component='nav'\r\n        {...restProps}\r\n        aria-labelledby='list-subheader'\r\n        subheader={\r\n          subHeader && (\r\n            <ListSubheader component='div' id='list-subheader'>\r\n              {subHeader}\r\n            </ListSubheader>\r\n          )\r\n        }\r\n      >\r\n        {items.map((item, i) => {\r\n          return (\r\n            <ListItem\r\n              button={trackSelection}\r\n              id={item.id || i}\r\n              key={item.id || i}\r\n              onClick={(event) => handleListItemClick(event, item.id)}\r\n              selected={trackSelection && selectedIndex === item.id}\r\n            >\r\n              {getItemIcon(item.icon)}\r\n              <ListItemText\r\n                primary={item.primaryLabel}\r\n                secondary={item.secondaryLabel}\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MuiList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListSubheader,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  Checkbox,\r\n  makeStyles,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  listItems: {\r\n    overflow: 'auto',\r\n    height: '80%'\r\n  },\r\n  listSubheader: {\r\n    borderTopLeftRadius: theme.shape.borderRadius,\r\n    borderTopRightRadius: theme.shape.borderRadius,\r\n    padding: '8px 16px 8px 16px',\r\n    backgroundColor: theme.palette.background.secondaryDefault\r\n  }\r\n}));\r\n\r\nexport function MuiCheckList(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    listSubHeader,\r\n    items,\r\n    noIcon,\r\n    selectedItemIndex,\r\n    checkboxPlacement = 'right',\r\n    onItemCheck,\r\n    disabled,\r\n    ...restProps\r\n  } = props;\r\n\r\n  //const [selectedIndex, setSelectedIndex] = useState(selectedItemIndex);\r\n  const [checked, setChecked] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n\r\n  const handleToggle = (value) => () => {\r\n    if (!disabled) {\r\n      let newChecked = [];\r\n      if (value === -1 && !selectAll) {\r\n        newChecked = items.map((item) => {\r\n          return item.id;\r\n        });\r\n        setSelectAll(true);\r\n      } else if (value === -1 && selectAll) {\r\n        //value = 0;\r\n        setSelectAll(false);\r\n      } else {\r\n        setSelectAll(false);\r\n        const currentIndex = checked.indexOf(value);\r\n        newChecked = [...checked];\r\n        if (currentIndex === -1) {\r\n          newChecked.push(value);\r\n        } else {\r\n          newChecked.splice(currentIndex, 1);\r\n        }\r\n      }\r\n      //setSelectedIndex(value);\r\n      setChecked(newChecked);\r\n      onItemCheck && onItemCheck(newChecked);\r\n    }\r\n  };\r\n\r\n  const getItemIcon = (itemIcon) => {\r\n    const icon = (\r\n      <ListItemIcon>\r\n        {itemIcon ? itemIcon : <StarIcon edge='start' />}\r\n      </ListItemIcon>\r\n    );\r\n    return !noIcon && icon;\r\n  };\r\n\r\n  const isAllChecked = () => {\r\n    if (items.length > 0) {\r\n      const isAll = items.reduce((acc, item, idx) => {\r\n        return acc && selectedItemIndex.indexOf(item.id) > -1;\r\n      }, true);\r\n      setSelectAll(isAll);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setChecked(selectedItemIndex);\r\n    isAllChecked();\r\n  }, [selectedItemIndex, setChecked, isAllChecked]);\r\n\r\n  return (\r\n    <List\r\n      component='nav'\r\n      {...restProps}\r\n      aria-labelledby='list-subheader'\r\n      className={clsx(classes.root, restProps ? restProps.className : {})}\r\n      disablePadding={true}\r\n    >\r\n      {listSubHeader && (\r\n        <ListItem\r\n          role={undefined}\r\n          button\r\n          id={-1}\r\n          key={-1}\r\n          className={classes.listSubheader}\r\n          onClick={handleToggle(-1)}\r\n          disableRipple={disabled}\r\n          disabled={disabled}\r\n        >\r\n          <>\r\n            {getItemIcon(\r\n              <Checkbox\r\n                disableRipple={true}\r\n                edge='start'\r\n                //onClick={handleToggle(-1)}\r\n                checked={selectAll}\r\n                disabled={disabled}\r\n              />\r\n            )}\r\n            <ListItemText\r\n              primary={listSubHeader.primaryLabel}\r\n              secondary={listSubHeader.secondaryLabel}\r\n            />\r\n          </>\r\n        </ListItem>\r\n      )}\r\n      <div className={classes.listItems}>\r\n        {items.map((item, i) => {\r\n          return (\r\n            <ListItem\r\n              role={undefined}\r\n              button\r\n              id={item.id || i}\r\n              key={item.id || i}\r\n              onClick={handleToggle(item.id)}\r\n              disableRipple={disabled}\r\n              disabled={disabled}\r\n            >\r\n              {checkboxPlacement === 'right' ? (\r\n                <>\r\n                  {getItemIcon(item.icon)}\r\n                  <ListItemText\r\n                    primary={item.primaryLabel}\r\n                    secondary={item.secondaryLabel}\r\n                  />\r\n                  <ListItemSecondaryAction>\r\n                    <Checkbox\r\n                      disableRipple={true}\r\n                      edge='end'\r\n                      //onChange={handleToggle(item.id)}\r\n                      checked={checked.indexOf(item.id) !== -1}\r\n                      disabled={disabled}\r\n                    />\r\n                  </ListItemSecondaryAction>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {getItemIcon(\r\n                    <Checkbox\r\n                      disableRipple={true}\r\n                      edge='start'\r\n                      //onChange={handleToggle(item.id)}\r\n                      checked={checked.indexOf(item.id) !== -1}\r\n                      disabled={disabled}\r\n                    />\r\n                  )}\r\n                  {getItemIcon(item.icon)}\r\n                  <ListItemText\r\n                    primary={item.primaryLabel}\r\n                    secondary={item.secondaryLabel}\r\n                  />\r\n                </>\r\n              )}\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </div>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default MuiCheckList;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiCard from '@material-ui/core/Card';\r\nimport MuiCardActionArea from '@material-ui/core/CardActionArea';\r\nimport MuiCardActions from '@material-ui/core/CardActions';\r\nimport MuiCardContent from '@material-ui/core/CardContent';\r\nimport MuiCardMedia from '@material-ui/core/CardMedia';\r\nimport MuiCardHeader from '@material-ui/core/CardHeader';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345\r\n  },\r\n  content: {\r\n    overflow: 'auto',\r\n    height: '100%'\r\n  },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\nexport function MuiSimpleCard(props) {\r\n  const classes = useStyles();\r\n  const { cardHeaderProps, children, ...restProps } = props;\r\n\r\n  return (\r\n    <MuiCard className={classes.root} {...restProps}>\r\n      <MuiCardActionArea>\r\n        <MuiCardHeader {...cardHeaderProps} />\r\n      </MuiCardActionArea>\r\n      <MuiCardContent className={classes.content}>{children}</MuiCardContent>\r\n    </MuiCard>\r\n  );\r\n}\r\n\r\nexport default MuiSimpleCard;\r\n\r\nconst useStyles2 = makeStyles({\r\n  root: {\r\n    //minWidth: 250\r\n  },\r\n  content: {\r\n    overflow: 'auto',\r\n    height: '100%'\r\n  },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\nexport function MuiSimpleCardV2(props) {\r\n  const classes = useStyles2();\r\n  const { cardHeaderProps, children, ...restProps } = props;\r\n\r\n  return (\r\n    <MuiCard className={classes.root} {...restProps}>\r\n      <MuiCardHeader {...cardHeaderProps} />\r\n      <MuiCardContent className={classes.content}>{children}</MuiCardContent>\r\n    </MuiCard>\r\n  );\r\n}\r\n\r\nexport {\r\n  MuiCardHeader,\r\n  MuiCard,\r\n  MuiCardActionArea,\r\n  MuiCardActions,\r\n  MuiCardContent,\r\n  MuiCardMedia\r\n};\r\n","import React from 'react';\r\nimport { makeStyles, MuiPaper } from '../../../../components/MuiControls';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    //border: \"2px solid red\",\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  pageHeader: {\r\n    //border: \"1px solid green\",\r\n    // flexBasis: (props) => props.headerMaxHeight || '10%',\r\n    // maxHeight: (props) => props.headerMaxHeight || '10%',\r\n    // overflow: 'auto',\r\n    padding: '0.5em',\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n    //marginBottom: `${theme.spacing(0.5)}px`,\r\n  },\r\n  pageContent: {\r\n    //border: \"1px solid green\",\r\n    flexBasis: '100%',\r\n    overflow: 'auto',\r\n    //marginBottom: `${theme.spacing(0.5)}px`,\r\n  },\r\n  pageFooter: {\r\n    //border: \"1px solid green\",\r\n    flexBasis: (props) => props.footerMaxHeight || '10%',\r\n    maxHeight: (props) => props.footerMaxHeight || '10%',\r\n    overflow: 'auto',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\r\n  },\r\n}));\r\n\r\nexport function ContentPageBase(props) {\r\n  const classes = useStyles(props);\r\n  const { children, headerContent, footerContent } = props;\r\n  return (\r\n    <div className={classes.paper}>\r\n      {headerContent && (\r\n        <div className={classes.pageHeader}>{headerContent}</div>\r\n      )}\r\n      <div className={classes.pageContent}>{children}</div>\r\n      {footerContent && (\r\n        <div className={classes.pageFooter}>{footerContent}</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentPageBase;\r\n","import React from 'react';\r\nimport ContentPageBase from '../../core/components/pages/ContentPageBase';\r\nimport { MuiNumberField, MuiTypography, makeStyles } from '../../../components/MuiControls';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      margin: '5px 10px',\r\n    },\r\n  }));\r\n  \r\nexport function RStgFinder(props) {\r\n  console.log('RStgFinder')\r\n  const classes = useStyles(props);\r\n  return (\r\n    <div className={classes.root}>\r\n    <ContentPageBase >\r\n        <MuiNumberField label='Last Win' />\r\n        <MuiTypography> A CD</MuiTypography>\r\n    </ContentPageBase>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RStgFinder;\r\n","import ViewQuiltSharpIcon from '@material-ui/icons/ViewQuiltSharp';\r\nimport DonutSmallSharpIcon from '@material-ui/icons/DonutSmallSharp';\r\nimport ListAltSharpIcon from '@material-ui/icons/ListAltSharp';\r\nimport RateReviewSharpIcon from '@material-ui/icons/RateReviewSharp';\r\nimport UpdateSharpIcon from '@material-ui/icons/UpdateSharp';\r\nimport SettingsSharpIcon from '@material-ui/icons/SettingsSharp';\r\nimport FileCopySharpIcon from '@material-ui/icons/FileCopySharp';\r\nimport LayersClearSharpIcon from '@material-ui/icons/LayersClearSharp';\r\nimport RepeatSharpIcon from '@material-ui/icons/RepeatSharp';\r\n\r\nimport HomeSharpIcon from '@material-ui/icons/HomeSharp';\r\n//import DashboardSharpIcon from '@material-ui/icons/DashboardSharp';\r\n\r\nimport {\r\n  RouterSwitch,\r\n  PublicRoute,\r\n  createLinkElement\r\n} from '../../providers/route';\r\nimport RStgFinder from '../roulette/pages/RStgFinder';\r\n\r\nconst AU_APP_ROOT = '/rkwebapps'; //e.g. http://myprismvm.retailpro.com/rkwebapps/\r\n\r\nexport const AU_MENU_ITEMS = {\r\n  listID: 'AU-001',\r\n  listLongLabel: 'App 1',\r\n  listShortLabel: 'APP1',\r\n  listItems: [\r\n    {\r\n      ID: 'AUI-001.000',\r\n      longLabel: 'Home',\r\n      shortLabel: 'Home',\r\n      iconClass: <HomeSharpIcon />,\r\n      linkComponent: createLinkElement({\r\n        to: `${AU_APP_ROOT}/app1/home`\r\n      }),\r\n      onClick: function(e) {\r\n        console.log(`Item ${this.ID} clicked`);\r\n      }\r\n    },\r\n    {\r\n      ID: 'AUI-001.001',\r\n      longLabel: 'POS',\r\n      shortLabel: 'AMM',\r\n      iconClass: <DonutSmallSharpIcon />,\r\n      linkComponent: createLinkElement({\r\n        to: `${AU_APP_ROOT}/app1/pos`,\r\n        exact: 'false'\r\n      }),\r\n      //onClick: function (e) {console.log(`Item ${this.ID} clicked`);},\r\n      subListItems: [\r\n        {\r\n          ID: 'AUI-001.001.1',\r\n          longLabel: 'Sales',\r\n          shortLabel: 'Sales',\r\n          iconClass: <ListAltSharpIcon />,\r\n          linkComponent: createLinkElement({\r\n            to: `${AU_APP_ROOT}/app1/sales`\r\n          })\r\n        },\r\n        {\r\n          ID: 'AUI-001.001.2',\r\n          longLabel: 'Sales Orders',\r\n          shortLabel: 'SO',\r\n          iconClass: <RateReviewSharpIcon />,\r\n          linkComponent: createLinkElement({\r\n            to: `${AU_APP_ROOT}/app1/so`\r\n          }),\r\n          onClick: function(e) {\r\n            console.log(`Item ${this.ID} clicked`);\r\n          }\r\n        },\r\n        {\r\n          ID: 'AUI-001.001.3',\r\n          longLabel: 'Customers',\r\n          shortLabel: 'CM',\r\n          iconClass: <UpdateSharpIcon />,\r\n          linkComponent: createLinkElement({\r\n            to: `${AU_APP_ROOT}/app1/cm`\r\n          }),\r\n          onClick: function(e) {\r\n            console.log(`Item ${this.ID} clicked`);\r\n          }\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      ID: 'AUI-001.002',\r\n      longLabel: 'Replenishment',\r\n      shortLabel: 'Repln',\r\n      iconClass: <RepeatSharpIcon />,\r\n      linkComponent: createLinkElement({ to: `${AU_APP_ROOT}/app1/brm` }),\r\n      onClick: function(e) {\r\n        console.log(`Item ${this.ID} clicked`);\r\n      }\r\n    },\r\n    {\r\n      ID: 'AUI-001.003',\r\n      longLabel: 'Options',\r\n      shortLabel: 'Opts',\r\n      iconClass: <SettingsSharpIcon />,\r\n      linkComponent: createLinkElement({\r\n        to: `${AU_APP_ROOT}/app1/options`\r\n      }),\r\n      onClick: function(e) {\r\n        console.log(`Item ${this.ID} clicked`);\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nexport const AU_SIDEBAR_ITEMS = [AU_MENU_ITEMS];\r\n\r\nexport function getAppRoutes(props) {\r\n  //console.log('getAppRoutes.props: ', props);\r\n  return (\r\n    <RouterSwitch>\r\n      <PublicRoute path={`${AU_APP_ROOT}/app1/home`} exact={true}>\r\n        {getTestContent('HOME')}\r\n      </PublicRoute>\r\n      <PublicRoute path={`${AU_APP_ROOT}/app1/sales`} exact={true}>\r\n          <RStgFinder />\r\n      </PublicRoute>\r\n      <PublicRoute path={`${AU_APP_ROOT}/app1/cm`} exact={true}>\r\n          <Content title='CONFIG ROOT' />\r\n      </PublicRoute>\r\n      <PublicRoute path={`${AU_APP_ROOT}/app1/so`} exact={true}>\r\n          <RStgFinder />\r\n      </PublicRoute>\r\n    </RouterSwitch>\r\n  );\r\n}\r\n\r\nconst getTestContent = (title) => {\r\n  return (\r\n    <div>\r\n      {title}\r\n      !!!!here will display the content of the page here will display the\r\n      content of the page as an example. here will display the content of the\r\n      page here will display the content of the page as an example.here will\r\n      display the content of the page here will display the content of the page\r\n      as an example.here will display the content of the page here will display\r\n      the content of the page as an example. here will display the content of\r\n      the page here will display the content of the page as an example.here will\r\n      display the content of the page here will display the content of the page\r\n      as an example. here will display the content of the page here will display\r\n      the content of the page as an example. here will display the content of\r\n      the page here will display the content of the page as an example.here will\r\n      display the content of the page here will display the content of the page\r\n      as an example. !!!!\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Content = ({title}) => {\r\n  return (\r\n    <div>\r\n      {title}\r\n      !!!!here will display the content of the page here will display the\r\n      content of the page as an example. here will display the content of the\r\n      as an example. !!!!\r\n    </div>\r\n  )\r\n};\r\n  \r\n","import * as appRoutes from './appRoutes';\r\n\r\nconst defaultHandler = (e) => {\r\n  console.log(\r\n    'event: ' +\r\n      e.type.toUpperCase() +\r\n      ' e.target.value: ' +\r\n      (e.target && e.target.value)\r\n  );\r\n};\r\n\r\nexport const headerBarOptions = {\r\n  showSearchBox: false,\r\n  showAlertsButton: true,\r\n  alertsCount: 1,\r\n  showSettingsButton: true,\r\n  showLogoutButton: true,\r\n  onClickAlertsButton: defaultHandler,\r\n  onClickSettingsButton: defaultHandler,\r\n  onChangeSearchBox: undefined,\r\n  onKeyPressSearchBox: undefined,\r\n  onClickLogoutButton: defaultHandler\r\n};\r\n\r\nconst ModuleConfig = {\r\n  appSideBarItems: appRoutes.AU_SIDEBAR_ITEMS,\r\n  headerBarOptions: headerBarOptions,\r\n  appRoutes: appRoutes.getAppRoutes()\r\n  //getAppRoutesFn: appRoutes.getAppRoutes\r\n};\r\n\r\n\r\nModuleConfig.destroy = (event) => {\r\n  const status = {\r\n    event: event,\r\n    status: 'OK',\r\n  };\r\n\r\n  try {\r\n    __cleanup(ModuleConfig, status);\r\n    localStorage.setItem('AUCleanStatus', JSON.stringify(status));\r\n  } catch (error) {\r\n    console.error('ModuleConfig.destroy: cleanup error: ', error);\r\n  }\r\n};\r\n\r\nfunction __cleanup(obj, status) {\r\n  //console.log('__cleanup :', Object.keys(obj));\r\n  Object.keys(obj).forEach((key) => {\r\n    if (__destroy(obj[key])) {\r\n      status[key] = 'DONE';\r\n    }\r\n  });\r\n}\r\n\r\nfunction __destroy(obj) {\r\n  if ('destroy' in obj && typeof obj.destroy === 'function') {\r\n    obj.destroy();\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default ModuleConfig;\r\n","import React from 'react';\r\nimport './MainApp.css';\r\n\r\nimport ThemeProvider from '../../providers/theme/theme.provider';\r\nimport { createTheme as createMuiTheme } from '@material-ui/core/styles';\r\nimport { AppLayout } from '../../components/AppLayout';\r\n\r\nimport AUModuleConfig from './appBootstrap';\r\n\r\nimport { RouteProvider } from '../../providers/route';\r\n\r\nimport simpleLight from './themes/simpleLight.json';\r\nimport simpleDark from './themes/simpleDark.json';\r\n\r\n//const theme = createMuiTheme(simpleDark);\r\nconst theme = createMuiTheme(simpleLight);\r\n\r\nif (document) {\r\n  document.title = 'RK WebApps';\r\n}\r\n\r\nfunction WebAppApp(props) {\r\n  React.useEffect(() => {\r\n    const closeHandler = (ev) => {\r\n      ev.preventDefault();\r\n      return AUModuleConfig.destroy('browser.beforeunload');\r\n    };\r\n\r\n    console.log('app bootstraping...');\r\n    window && window.addEventListener('beforeunload', closeHandler);\r\n\r\n    return () => {\r\n      //app cleanup on refreshing page or unmounting\r\n      console.log('app cleaning up started');\r\n      AUModuleConfig.destroy('useEffect-cleanup');\r\n      window && window.removeEventListener('beforeunload', closeHandler);\r\n      console.log('app cleaning up finished');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n            <RouteProvider>\r\n              <WebAppLocale {...props}>\r\n                <WebApp {...props} />\r\n              </WebAppLocale>\r\n            </RouteProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction WebAppLocale(props) {\r\n  const { children } = props;\r\n  return (\r\n      <ThemeProvider value={theme}>{children}</ThemeProvider>\r\n  );\r\n}\r\n\r\nfunction WebApp(props) {\r\n  return (\r\n    <AppLayout\r\n      headerTitle={document.title}\r\n      //headerContent={<HeaderBar options={AUModuleConfig.headerBarOptions} />}\r\n      sideBarItems={AUModuleConfig.appSideBarItems}\r\n    >\r\n      {AUModuleConfig.appRoutes}\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport default WebAppApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nimport AutoToolApp from './modules/mainapp/MainApp';\r\n\r\n//import TestApp from './TestApp/TestApp';\r\n\r\nfunction renderMainApp() {\r\n  ReactDOM.render(\r\n    // <React.StrictMode>\r\n\r\n    <AutoToolApp />,\r\n\r\n    // </React.StrictMode>\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\nrenderMainApp();\r\n\r\n/*\r\nfunction renderTestApp() {\r\n  ReactDOM.render(<TestApp />, document.getElementById('root'));\r\n}\r\nrenderTestApp();\r\n*/\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}